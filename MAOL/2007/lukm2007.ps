%!PS-Adobe-2.0
%%Creator: dvips(k) 5.86 Copyright 1999 Radical Eye Software
%%Title: lukm2007.dvi
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips lukm2007.dvi -o
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2007.01.31:1950
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro
%!
% PostScript prologue for pstricks.tex.
% Version 97 patch 4, 04/05/10
% For distribution, see pstricks.tex.
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Atan { /atan load stopped { pop pop 0 } if } def
/Div { dup 0 eq { pop } { div } ifelse } def
/NET { neg exch neg exch T } def
/Pyth { dup mul exch dup mul add sqrt } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def }
def
/PathLength { flattenpath /z 0 def { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
} { /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
/pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
%
%%-------------- DG begin patch 15 ---------------%%
%/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
%PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
%mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
%/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
%0 } ifelse setdash stroke } def
/DashLine {
  dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def PathLength } ifelse
  /b ED /x1 ED /y1 ED /x ED /y ED 
  /z y x add y1 add x1 add def
  /Coef b a .5 sub 2 mul y mul sub z Div round 
  z mul a .5 sub 2 mul y mul add b exch Div def 
  /y y Coef mul def /x x Coef mul def /y1 y1 Coef mul def /x1 x1 Coef mul def
  x1 0 gt y1 0 gt x 0 gt y 0 gt and { [ y x y1 x1 ] 1 a sub y mul}
  { [ 1 0] 0 } ifelse setdash stroke
} def
%%-------------- DG end patch 15 ---------------%%
/DotLine { /b PathLength def /a ED /z ED /y CLW def /z y z add def a 0 gt
{ /b b a div def } { a 0 eq { /b b y sub def } { a -3 eq { /b b y add
def } if } ifelse } ifelse [ 0 b b z Div round Div dup 0 le { pop 1 } if
] a 0 gt { 0 } { y 2 div a -2 gt { neg } if } ifelse setdash 1
setlinecap stroke } def
/LineFill { gsave abs CLW add /a ED a 0 dtransform round exch round exch
2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
% DG/SR modification end
Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
% def
a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
pop pop } def
% DG/SR modification end
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { { /z DS def } { /z 0 def } ifelse /b ED 0 z DS SD b { 0 z DS
CLW sub SD } if 0 DS z add CLW 4 div sub moveto } def
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
/closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
load } if ] cvx newpath 3 1 roll T exec } def
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop } if
f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/Line { NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub
def n { Lineto } repeat CP 4 2 roll ArrowB L pop pop } if } def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
Lineto pop pop closepath } ifelse } def
/Diamond { /mtrx CM def T rotate /h ED /w ED dup 0 eq { pop } { CLW mul
neg /d ED /a w h Atan def /h d a sin Div h add def /w d a cos Div w add
def } ifelse mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2
div /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
setmatrix pop } def
% DG/SR modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { NArray n 3 lt { n { pop pop } repeat } { BOC /n n 3 sub def
    n { NC } repeat EOC } ifelse } def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997 - Patch 1
%{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
{ 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro
%!PS-Adobe-2.0
%%Title: Dot Font for PSTricks
%%Creator: Timothy Van Zandt <tvz@Princeton.EDU>
%%Creation Date: May 7, 1993
%% Version 97 patch 1, 99/12/16
%% Modified by Etienne Riga <etienne.riga@skynet.be> - Dec. 16, 1999
%% to add /Diamond, /SolidDiamond and /BoldDiamond
10 dict dup begin
  /FontType 3 def
  /FontMatrix [ .001 0 0 .001 0 0 ] def
  /FontBBox [ 0 0 0 0 ] def
  /Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
% DG/SR modification end
  /Metrics 13 dict def
  Metrics begin
    /Bullet        1000   def
    /Circle        1000   def
    /BoldCircle    1000   def
    /SolidTriangle 1344   def
    /Triangle      1344   def
    /BoldTriangle  1344   def
    /SolidSquare    886   def
    /Square         886   def
    /BoldSquare     886   def
    /SolidPentagon 1093.2 def
    /Pentagon      1093.2 def
    /BoldPentagon  1093.2 def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /SolidDiamond  1008   def
    /Diamond       1008   def
    /BoldDiamond   1008   def
% DG/SR modification end
    /.notdef 0 def
  end
  /BBoxes 13 dict def
  BBoxes begin
    /Circle        { -550 -550 550 550 } def
    /BoldCircle    /Circle load def
    /Bullet        /Circle load def
    /Triangle      { -571.5 -330 571.5 660 } def
    /BoldTriangle  /Triangle load def
    /SolidTriangle /Triangle load def
    /Square        { -450 -450 450 450 } def
    /BoldSquare    /Square load def
    /SolidSquare   /Square load def
    /Pentagon      { -546.6 -465 546.6 574.7 } def
    /BoldPentagon  /Pentagon load def
    /SolidPentagon /Pentagon load def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /Diamond       { -428.5 -742.5 428.5 742.5 } def
    /BoldDiamond   /Diamond load def
    /SolidDiamond  /Diamond load def
% DG/SR modification end
    /.notdef { 0 0 0 0 } def
  end
  /CharProcs 20 dict def
  CharProcs begin
    /Adjust {
      2 copy dtransform floor .5 add exch floor .5 add exch idtransform
      3 -1 roll div 3 1 roll exch div exch scale
    } def
    /CirclePath    { 0 0 500 0 360 arc closepath } def
    /Bullet        { 500 500 Adjust CirclePath fill } def
    /Circle        { 500 500 Adjust CirclePath .9 .9 scale CirclePath
                     eofill } def
    /BoldCircle    { 500 500 Adjust CirclePath .8 .8 scale CirclePath
                     eofill } def
    /BoldCircle    { CirclePath .8 .8 scale CirclePath eofill } def
    /TrianglePath  { 0  660 moveto -571.5 -330 lineto 571.5 -330 lineto
                     closepath } def
    /SolidTriangle { TrianglePath fill } def
    /Triangle      { TrianglePath .85 .85 scale TrianglePath eofill } def
    /BoldTriangle  { TrianglePath .7 .7 scale TrianglePath eofill } def
    /SquarePath    { -450 450 moveto 450 450 lineto 450 -450 lineto
                     -450 -450 lineto closepath } def
    /SolidSquare   { SquarePath fill } def
    /Square        { SquarePath .89 .89 scale SquarePath eofill } def
    /BoldSquare    { SquarePath .78 .78 scale SquarePath eofill } def
    /PentagonPath  {
      -337.8 -465   moveto
       337.8 -465   lineto
       546.6  177.6 lineto
         0    574.7 lineto
      -546.6  177.6 lineto
      closepath
    } def
    /SolidPentagon { PentagonPath fill } def
    /Pentagon      { PentagonPath .89 .89 scale PentagonPath eofill } def
    /BoldPentagon  { PentagonPath .78 .78 scale PentagonPath eofill } def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /DiamondPath   { 0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto
                     428.5 0 lineto closepath } def
    /SolidDiamond  { DiamondPath fill } def
    /Diamond       { DiamondPath .85 .85 scale DiamondPath eofill } def
    /BoldDiamond   { DiamondPath .7 .7 scale DiamondPath eofill } def
% DG/SR modification end
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
      Metrics 1 index get exec 0
      BBoxes 3 index get exec
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop
%END pst-dots.pro

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin 39158280 55380996 1200 600 600 (lukm2007.dvi)
@start
%DVIPSBitmapFont: Fa msbm10 12 1
/Fa 1 91 df<0003B812FE4883A301879039000F803ED98FF0011F137ED9BFC0EC007C01
FFC7003E5B13FC48484A485A49ECFC034902F85B4B48485A5B494948485A0307131F04C0
90C7FC90C7380F803EA24B485A00064A13FCC8003E5B4B485AA24B485A0201130703F05B
4A48485AA24A4848C8FC5E91380F803E021F5B1500023E5B1501027C5B9138FC03E014F8
4948485AA24948485A0107011F156002C090C812F090380F803EA249484814014913FC01
3E5B494848EC03E0A249484814070001130701F049140F48484848141FA2484848C8EA3F
C0000F49157FD9803E15FF484848EC01FBEF07F3003E49EC0FE7D87E01ED7F87007C4990
3903FF0780BAFCA36C18003C447DC345>90 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmsy10 12 3
/Fb 3 107 df<007FB912E0BA12F0A26C18E03C04789A4D>0 D<92B6FC02071580143F91
B7120001030180C8FCD907FCC9FCEB1FE0EB3F80017ECAFC5B485A485A485A5B485A121F
90CBFC123EA2123C127CA2127812F8A25AA2B9FC1880A2180000F0CBFCA27EA21278127C
A2123C123EA27E7F120F6C7E7F6C7E6C7E6C7E137E6D7EEB1FE0EB07FC6DB47E010090B6
FC023F1580140702001500313A78B542>50 D<126012F0B3B3B3B3B3A81260046474CA1C
>106 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmr7 8.4 7
/Fc 7 57 df<EB3FE03801FFFC000713FFD80F801380391E003FC048EB1FE048EB0FF000
70EB07F812FC6CEB03FC7EA21401A2007E1303123CC7FC15F81407A215F0EC0FE0141F15
C0EC3F80EC7F0014FC5C495A495A495A49C7FC131E49131C5B5B48481338485A48C7FC00
0E1478001FB512F85A5AB612F0A31E2E7BAD28>50 D<EB1FF0EBFFFE0003EBFF803907E0
1FE0390F000FF0001EEB07F8003F1303018013FCA2EBC0011380121F380E0003C7FC15F8
140715F0EC0FE015C0EC1F80EC7E00EB3FF814FE9038001F80EC0FE0EC07F0EC03F8EC01
FC15FEA2EC00FFA3127EB4FCA3EC01FEA24814FC00781303007CEB07F86CEB0FF0390FE0
1FE06CB512800001EBFE0038001FF0202F7CAD28>I<EC01C014031407A2140F141F143F
A2147F14EFEB01CFA2EB038FEB070FA2130E131C1338A2137013E0A2EA01C0EA0380EA07
00A2120E5A121812385A5AB712C0A3C7380FC000A84A7E0107B51280A3222F7DAE28>I<
001C1460391FC007E090B512C0158015005C14F814C0D81C1CC7FC90C8FCA8EB1FE0EB7F
FC381DE03F391F800F80010013C0001EEB07E0001CEB03F0C7FC15F81401A215FCA3123C
12FEA4EC03F85A007014F00078130715E06CEB0FC0001FEB1F80390FC07F003807FFFC00
0113F038003F801E2F7BAD28>I<14FF010713C0011F13F090383F80F89038FC00784848
13FC3803F001EA07E013C0120F391F8000F8150048C8FCA25AA2127EEB07F838FE1FFE90
38380F8090387007E09038E003F039FFC001F890388000FCA290C712FE157E157F5AA312
7EA3127FA26C147EA26C14FE6D13FC390FC001F80007EB03F09038E007E03901F80FC06C
B5128090383FFE00EB0FF0202F7CAD28>I<1238123E003FB61280A34815005DA20078C7
123C00705C5D5D4813014A5A4A5AC748C7FC140E141E5C5CA25C13015C13035C1307A249
5AA3131FA349C8FCA45BA9131C21307BAE28>I<EB0FF0EB7FFE48B512803903F01FE039
07C007F0390F8001F848C7FC001E14FC003E147CA3123FA26D13FC01E013F8381FF00190
38FC03F0390FFF07E06CEB8F806CEBFE006C13F86C6C7EEB1FFF017F13C0D801F313E0D8
07C013F0390F807FF8391F001FFC003EEB07FE007E1303007CEB00FF00FC147F48143FA2
151FA37E007C143E127E003E147C003F14F8391FC001F03907F00FE06CB51280C6EBFE00
EB1FF0202F7CAD28>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmmi10 12 3
/Fd 3 121 df<027FB712C091B812F819FF9128007FF0000313806F489038007FE0037F
ED1FF0F10FF84C1407F103FC03FF16FEA25E1AFF5CA293C8FCA25CF107FE5DA2020717FC
190F4B16F8F11FF0140FF13FE04BED7FC0F1FF80021F4B1300F003FC4BEC0FF8F03FE002
3F913801FF8092B648C7FC18E003E0CAFC147FA25DA214FFA25DA25BA292CBFCA25BA25C
A21307A25CA2130FA25CA2131FA25CEB7FF8B612FCA25D48447DC340>80
D<01F8EB03FCD803FE90380FFF803B078F803C07C03B0F0FC0F003F0390E07C1C0001C90
39E38001F8ECE700003C13EE003801FC80130F00785B00705BA226F01FE0130300E05E5C
1200013F14075F5CA2017F140F5F91C7FC161F495DA249143F5F00011778047F13704915
005E00034B13F018E05B9338FC01C01207EF03804915071800EE7C0E49EC3E3CEE1FF8D8
0380EC07E0352D7DAB3C>110 D<027EEB07F8903A03FF801FFE903B0F83E03C0F809027
1E01F07013C0013C9038F8E01F903A7800F9C03F4901FF137F4848148049140000031780
5B00074AEB1E0090C791C7FC1401485C120EC7FC14035DA314075DA3140F5DA3021F141E
171C5D173C000F013F1438EA3F80D87FC05D4A4813F06F5B26FF80FF495A02E71303267F
01C7495A287C0383E00EC7FC3A3E0F01F03C3A0FFE007FF0D803F8EB1FC0322D7EAB39>
120 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fe cmr10 12 45
/Fe 45 128 df<1406140E141C143814F014E01301EB03C0EB0780EB0F005B131E133E5B
137813F85B1201A2485AA2485AA2120F5BA2121FA290C7FCA25AA3123E127EA65AB3A212
7EA6123E123FA37EA27FA2120FA27F1207A26C7EA26C7EA212007F1378137C7F131E131F
7FEB0780EB03C0EB01E0130014F01438141C140E1406176476CA27>40
D<12C07E12707E121E120E120F6C7E6C7E6C7E7F12007F137C133C133E131E131FA2EB0F
80A2EB07C0A214E01303A214F0A21301A214F8A3130014FCA6147EB3A214FCA614F81301
A314F0A21303A214E0A2130714C0A2EB0F80A2EB1F00A2131E133E133C137C5B5B12015B
485A485A48C7FC120E121E12385A5A5A17647BCA27>I<16C04B7EB3AC007FBA1280BB12
C0A26C1980C8D801E0C9FCB3AC6F5A42427BB94D>43 D<121FEA3F80EA7FC0EAFFE0A313
F0A2127FEA3FB0EA1F301200A413701360A213E013C0A2120113801203EA07001206120E
5A5A12300C1E788A1C>I<B612C0A61A067F9821>I<121FEA3F80EA7FC0EAFFE0A5EA7FC0
EA3F80EA1F000B0B788A1C>I<ECFF80010713F090381FC1FC90383F007E017C131F496D
7E48486D7E00038148486D7EA248486D7EA2001F81A2003F81A2491300A2007F81A600FF
1680B3A3007F1600A5003F5D6D1301A3001F5DA2000F5D6D130300075DA26C6C495A6C6C
495AA2D8007C49C7FC013F137E90381FC1FC903807FFF00100138029447CC132>48
D<1438147814F81303130F137FB5FC13F71387EA0007B3B3B0497E497E007FB61280A321
4278C132>I<EB03FE90381FFFE0017F13F83901F807FE3903E001FF26078000138048C7
EA7FC0001EEC3FE0001CEC1FF0003C15F80038140F007815FC00701407127CB415FE7F7F
1503A46C4813076CC7FCC8FC16FCA2150F16F8151F16F016E0153FED7FC01680EDFF005D
4A5A4A5A4A5A5D4A5A4A5A4AC7FC147E5C5C495A495A4948130E495A49C7FC013E141C13
3C5B5BD801C0143C485A48C8127848B612F85AA25A5AB712F0A327427BC132>I<49B47E
010F13F090383F01FC9038F8007FD801E0EB3FC048486D7E48488048C7120F6D8013E048
6C806D1307A56C48130F6C485CC8FCA25E151F5E4B5AA24B5A03FEC7FC4A5AEC03F0EC1F
C090380FFF8015F090380001FCEC007FED3FC06F7E6F7E6F7E82A26F7E82A2811780A312
1FEA7FC0A2487EA317005D5B6C485C007EC7FC00784A5A6C5D6C140F6C4A5AD807C0495A
D803F0EB7F802701FE01FFC7FC39007FFFFC010F13F00101138029447CC132>I<ED01C0
15031507A2150F151FA2153F157FA215FF15DF1401EC039F151F1407140E140C141C1438
1430147014E014C01301EB038014005B130E130C131C5B133013705B5B1201485AA248C7
FC120EA25A5AA25A5AB812E0A3C8383FC000AC157FEDFFF091B612E0A32B437DC232>I<
00061560D807C0EB03E001FCEB3FC090B6128016005D5D5D15E01580D91FF8C7FC90C9FC
AD14FF010713E090381F01F8903838007E497F49148049EB1FC049EB0FE090C7FC0006EC
07F0C8FC16F8A2ED03FCA316FEA5123EEA7F8012FF7FA34914FCA248C71207007015F8A2
0078EC0FF01238003C15E06C141FED3FC06CEC7F80D807C0EBFF003903E001FC3901FC07
F839007FFFE0011F1380D903FCC7FC27447BC132>I<EC03FCEC1FFF9138FC03C0903901
F001E0903907E00070D90F80137849C7FC013EEB01FC017E1303491307485A12035B0007
6E5A48486D5A92C8FC121FA25B123FA3127F5BEC3FC0ECFFF8903883C07C39FF87003F01
8E6D7E019C6D7E01B86D7E01B06D7E01F080496D7EA2825B6F7EA3491580A4127FA66C7E
A21700121F5D5E6C7E5E6C6C130300035D6D495A00014A5A6C6C495A017F495A6D6CB4C7
FC90380FFFFC010313F09038007F8029447CC132>I<ECFF80010713F090381F80F89038
3E003E01FC7F48486D7E48488000076E7E484880001F14034980003F140182485AA28212
FF150082A61780A4007F5CA36C7E5D121FA26C6C5B000714066C6C130E6C6C5B6C6C5B01
7E5B90261F81E01300903807FF80903801FE0090C8FC5D5EA35EA215035EEA07C0486C49
5A487E4B5A5E151F49495A4949C7FC6CC7127E4A5A3907C003F83903F00FE06CB512806C
6C48C8FCEB0FF029447CC132>57 D<121FEA3F80EA7FC0EAFFE0A5EA7FC0EA3F80EA1F00
C7FCB3A3121FEA3F80EA7FC0EAFFE0A5EA7FC0EA3F80EA1F000B2B78AA1C>I<007FBA12
80BB12C0A26C1980CEFCB0007FBA1280BB12C0A26C198042187BA44D>61
D<EB0FFE90387FFFE03901F007F839078001FE48C7127F001EEC3F804815C04815E0151F
00FE15F07E7FA46CC7FC123EC8EA3FE0A2ED7FC01680EDFF004A5AEC03F84A5A5D4A5A4A
5A92C7FC143EA25C1478A25CA25CA21301A25CAA90C9FCA9EB03E0497E497E497EA56D5A
6D5A6D5A24467BC52F>63 D<B600F80107B512E0A3C601F8C8EBFE006D48ED7FF06D48ED
3FC096C7FC183E60604D5A4D5A4D5A4D5A4DC8FC173E5F5F4C5A4C5A4C5A4C5A4CC9FC16
3E5E5E4B5A4B7E4B7E150F4B7E4B7E5D03F97FDAE1F07FECE3E09139E7C07FE09139EF80
3FF0ECFF004A6D7E4A6D7E5C4A6D7E4A6D7EA2707F707FA2717E717EA2717E717EA2717E
717EA2717F717FA2727E8585496C82496C4AB5FCB600F8011F14F8A345447DC34D>75
D<B7FCA3C601F8C9FC6D5A6D5AB3B3181CA4183C1838A51878A318F0A217011703A21707
170F173F017F15FF496C010713E0B9FCA336447DC33E>I<B500F094B512F0A3C66D4CEB
F000017F61D93BFC933803BFC0A3D939FEEE073FA2D938FF160EA36E6C151CA26E6C1538
A36E6C1570A36E6C15E0A26E6CEC01C0A36E6CEC0380A26E6CEC0700A36E6C140EA26F6C
5BA36F6C5BA26F6C5BA36F6C5BA36F6C485AA26F6C485AA36F6C48C7FCA2923800FF0EA3
EE7F9CA2EE3FF8A3705AA2137C705A48B44E7E000701C06D484A7EB500FE93B612F0A270
5A54447DC35B>I<ED0FFC92B512C0913907F807F891391FC000FE027FC7EA3F8002FCEC
0FC0D903F8EC07F049486E7E49486E7E49486E7E4948157F49C96C7E01FE707E00018449
160F0003844848707EA2000F84491603001F84A24848707EA3007F1980A24982A300FF19
C0AD6C6C4C1380A4003F1900A26D5E001F60A26C6C4C5AA20007606D160F0003606D161F
0001606C6C4C5A6D6C4B5A013F94C7FC6D6C15FE6D6C4A5A6D6C4A5A6D6C4A5A6D6C4A5A
D9007FEC3F80DA1FC001FEC8FC913907F807F80200B512C0DB0FFCC9FC42487BC54D>79
D<B87E17F817FEC6903AF00003FF806D489038007FE0013FED1FF0EF07F8717E717E8471
1380A219C0187FA219E0A719C0A218FF198019005F604D5A4D5AEF1FF0EF7FC0DC03FFC7
FC91B612FC17E002E0CAFCB3A9497E497EB612F8A33B447DC344>I<49B4EB0180010FEB
E003013FEBFC079038FE00FED801F8EB1F8FD803E0EB07CF4848EB03FF48487F48C8FC16
7F003E153F127E161F007C150F12FCA21607A37E16037EA27F6C6C91C7FC7F7FEA3FFCEB
FFC06C13FC6CEBFFC015FC6C14FF6C15C0C615F06D80011F80010380D9007F7F02071480
EC007F030713C015019238007FE0163F161F17F0160F12E01607A21603A37EA217E07E16
077E17C06C150F6C16806DEC1F006D5C6D147ED8F9F85CD8F87E495A3AF01FE00FE06DB5
5AD8E00191C7FC39C0001FF82C487BC537>83 D<003FB912F8A3903BF8003FF8003F01C0
6D48130790C71501007EEF00FC007C187CA20078183CA20070181CA648180EA5C81600B3
B3A44B7EEDFFFE0107B712C0A33F437CC248>I<B600E091387FFFFCA3000101F8C80007
13C06C01E06F1300017FEE00FC61013F5F80011F5FA26E1501010F5FA26D6C4B5AA28001
034CC7FCA26E5D6D160EA26D6D5CA281027F5DA26F1478023F1570A26E6C5CA281020F4A
5AA26F130302075DA26E6C49C8FCA26F5B6E140EA2EE801E6E141C16C0037F5BA2EEE078
033F1370A2EEF0F0031F5B16F892380FF9C0A216FF6F5BA36F90C9FCA26F5AA36F5AA316
78A246467EC34B>86 D<EB07FC90383FFF809038FC07E03903E001F839078000FC48C712
7E01C0137F486C6D7E6D6D7EA36F7EA26C5AEA0380C8FCA4EC07FF91B5FC903807FE0FEB
3FE0EBFF00EA03FC485A485A485A485AA2485A177012FF90C7FCA2151FA36D133F007F14
776D01E313603B3FE001C3F0E03B0FF00381F9C03A07F80F01FF2701FFFC00138026001F
F0EB3E002C2E7CAC32>97 D<EE3F80ED3FFFA31500167F163FB3EC3FC0903801FFF89038
0FE03E90383F800F90397E0003BF49EB01FF48487F12034848147F4848143F121FA2485A
A2127FA25B12FFAB127FA27F123FA2121F7F000F157F7F000715FF6C6C5B6C6C497FD800
7E903807BFE06D90391E3FFF8090380FC07C903803FFF09026007F80EB800031467DC437
>100 D<14FF010713E090381F81F890387E00FC49137F4848EB3F800003141F484814C0
4848EB0FE0A2121F49EB07F0123FA2007F15F85BA200FF1403A390B6FCA20180C8FCA612
7FA37F123F1638121F6D1478000F15706C6C14F016E06C6C13016C6CEB03C0D8007EEB07
806DEB1F0090380FC07C903803FFF09038007F80252E7DAC2C>I<EE0FC0D901FEEB3FF0
90390FFFC0F0903A3F03F1C1F890397E01FF813A01FC00FE014848137F4990383F006000
07ED8000000F8149131FA2001F81A7000F5DA26D133F00075D000392C7FC6D5B6C6C13FE
9038FE01F83903BF03F090388FFFC0260701FEC8FC90CAFCA47FA27F7F6CB512F8EDFF80
6C15F06C816D14FE48B7FC2707E000071380D80F80EB007F48C8EA1FC0003E150F481507
17E0481503A56C1507007C16C0007E150F003E16806CED1F006C6C143ED807E014FCD801
F8EB03F0D8007FEB1FC0011FB5C7FC010113F02D427DAC32>103
D<13FE12FFA3120312011200B3ED7F80913803FFF091380781FC91381E00FE0238137F4A
7F4A805C01FF6E7E5CA291C7FCA35BB3A8486C4A7EB5D8FE1FB512C0A332457DC437>I<
EA01F0487E487E487EA56C5A6C5A6C5AC8FCAD13FE127FA3120312011200B3B0487EB512
FCA316447DC31C>I<147C14FE497E491380A56D13006D5A147C91C7FCADEC7F80EB3FFF
A31300147F143FB3B3AA123E127F39FF807F00A2147EA25C6C485A383C01F0381F03E038
07FF80D801FEC7FC195885C31E>I<13FE12FFA3120312011200B3A292380FFFFEA30303
13E094C7FCED01FC4B5A16E04B5A4B5A4BC8FC153E15785DEC03E04A5A140F4A7E4A7E14
7FECF3F89038FFE3FCECC1FE14804A7E496D7E49133F826F7E150F6F7E826F7E1501826F
7E707EA217E0486C4A7EB5D8FC07EBFF80A331457EC435>I<13FE12FFA3120312011200
B3B3B3A5487EB512FEA317457DC41C>I<D801FCD97FC0EB07FC00FF902601FFF890381F
FF8091260780FE9038780FE0913C1E007F01E007F000030138903A3F838003F800014990
391F87000100004902CE804A14CC01FDDA0FFC6D7E4A5C13FF91C75BA3495DB3A8486C4A
6C497EB5D8FE0FB500E0B512FEA34F2C7DAB54>I<D801FCEB7F8000FF903803FFF09138
0781FC91381E00FE00030138137F0001497F000049805C01FD6E7E5C13FF91C7FCA35BB3
A8486C4A7EB5D8FE1FB512C0A3322C7DAB37>I<EC7FC0903803FFF890380FC07E90393F
001F80017E6D7E01F8EB03E000018148486D7E48486D7E000F8149147E001F157FA2003F
168049143F007F16C0A400FF16E0AA007F16C0A36C6CEC7F80A2001F1600A26C6C14FE00
075D6D13016C6C495A00015DD8007EEB0FC06D495A90260FC07EC7FC903803FFF8903800
7FC02B2E7DAC32>I<01FE13FF00FF010713E091381F01F891387800FE000349137F6C6C
48EB3FC06C496D7E4A6D7E91C76C7EA2496E7EA283160183A3701380AB4C1300A35F1603
5F16076D5D4C5A6E5C6E495A4C5AD9FEF049C7FC027813FE91383E03F891380FFFC0DA01
FEC8FC91CAFCAE487EB512FEA3313F7EAB37>I<3901FC01F800FFEB0FFEEC1E1F913838
3F8000039038707FC0000113E0000013C013FD1480ED3F8001FFEB0E0091C8FCA45BB3A6
7F487FB6FCA3222C7EAB27>114 D<90381FF0183901FFFC383907E00F78390F8007F838
1E00015A007C130000781478A212F81538A27E7EA26C6C1300EA7FE013FE383FFFF06C13
FE6CEBFF806C14E0000114F06C6C13F8010F13FCEB007FEC07FE140100E0EB00FF157F15
3F7E151FA27EA2151E7E153E6C143C6C147C6D13F839FBC001F039F0F00FC039E07FFF00
38C00FF8202E7DAC27>I<130EA6131EA4133EA2137EA213FE120112031207001FB512F8
B6FCA2C648C7FCB3A4150EAA017E131E017F131CA26D133C90381F8038ECC070903807E0
E0903801FFC09038007F001F3E7EBC27>I<01FEEC1FC000FFEC1FFFA30003EC007F0001
153F0000151FB3A8163FA3167FA2017E14FF017F14DF6D01017F913980039FF0903B1FC0
071FFFC0903807F01E903801FFF89026003FE0EBC000322D7DAB37>I<B500F090B5FCA3
000790C7EA3FF86C48EC1FE00001ED0FC00000168017007F6D140EA26D6C5BA26E133C01
1F1438A26D6C5BA26E13F001075CA26D6C485AA2ECFC0301015CA26D6C48C7FCA26E5AEC
7F0EA2159EEC3F9CA2EC1FF8A36E5AA26E5AA36E5AA2302C7EAA35>I<B500F090B5FCA3
000790C7EA3FF8D801FEEC1FE0EE0FC0000016801700137F160E6E131E013F141CA26D6C
5BA26E1378010F1470A26D6C5BA2ECF80101035CA26D6C485AA2ECFE07010091C7FCA2EC
7F0EA2159EEC3F9CA2EC1FF8A36E5AA26E5AA36E5AA25DA2140792C8FCA2140EA2141E00
3C131C127EB45BA25C14F0485B387C01C038780780D83E0FC9FCEA0FFCEA03F0303F7EAA
35>121 D<001EEB03C0397F800FF0A239FFC01FF8A4397F800FF0A2391E0003C01D0A76
C332>127 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff cmbx10 12 11
/Ff 11 118 df<EA07E0EA1FF8EA3FFCEA7FFEA2B5FCA6EA7FFEA2EA3FFCEA1FF8EA07E0
1010788F20>46 D<EC03C04A7E141F147FEB01FF131FB6FCA413E1EA0001B3B3AD007FB7
FCA5284178C039>49 D<903801FFE0011F13FE017F6D7E48B612E048812607FE0713FC26
0FF0007FD81FC06D7E4848011F1380EA7FE06D6D13C0487E6D6D13E0A26F13F0A46C5AA2
6C5A6C5AC8FC17E05DA217C05D17804B13005E4B5A5E4B5A4B5A4A5B5E4A90C7FCEC07FC
4A5A4A5A4A5A91397F8001F0ECFF005C495AD903F0EB03E0495A495A495A49C71207017E
140F90B7FC4816C05A5A5A5A5A5AB8FC1780A42C417AC039>I<ECFFF80107EBFF80011F
14E0017F14F8D9FFC07F3A01FE001FFED803F86D7E48481580D80FFC6D13C07F6D15E048
1380A66C130017C06C485B6C481580C8FC4B13005E4B5A4B5A4B5A020713C00103B55A4B
C7FC6F7E16E090C713F8ED3FFEED0FFF6F138017C06F13E017F0A26F13F8A217FCA2EA0F
E0EA3FF8487EA2487EA317F8A25D4915F0127F494913E06C4815C049491380D81FF84913
006CB46CB45A000390B55A6C5D6C6C14E0011F91C7FC010113F02E427BC039>I<161F4C
7E167FA216FF5D5D5DA25D5D5D5DA292B5FC5CEC03F7EC07E7EC0FC71587141FEC3F0714
7E14FC14F81301EB03F0EB07E0EB0FC01480EB1F005B137E5B5B485A1203485A485A5B48
C7FC5A127E5AB912C0A5C8000FEB8000AB027FB612C0A532417DC039>I<00061507D80F
E0147F01FFEB0FFF91B6FC5E5E5E5E5E5E93C7FC5D15F815E04AC8FC01C0C9FCA9EC7FF0
9038C7FFFE01DFEBFFC090B67E02C013F89039FC003FFC01F0EB0FFE4980497F4915806C
C714C0C8FC6F13E0A417F0A2EA0F80EA1FE0487E487E12FF7FA317E05B5D6C4815C05B01
8015806CC74813006D5B6C6C495AD80FF0495A3A07FE03FFF86CB612E06C5D6C6C91C7FC
011F13F8010313802C427AC039>I<903801FFF8011FEBFF80017F14E090B612F8489038
807FFC3A03FE001FFE486CEB07FF486E7F0280806F7FA36F7F6C90C7FCA26C5AEA00F890
C8FCA2150F021FB5FC0103B6FC131F017F13C03901FFFC004813E0000F13804890C7FC48
5A5B485AA2485AA45DA26C6C5BED07BF6C6C010F13FC6CB490391F3FFFE06C9026C0FE1F
13F06CEBFFFC6CECF007C66CD9E00113E0010790C9FC342F7DAD38>97
D<13FCEA03FF4813804813C0A24813E0A66C13C0A26C13806C1300EA00FC90C7FCA9EB7F
C0EA7FFFA512037EB3AFB6FCA518467CC520>105 D<903A7FC003FF80B5011F13F0037F
7F92B57E9139C1FC1FFE9139C3E00FFF00039026C7C0077F6CEBCF0002DE7F02FC81A25C
5CA35CB3A7B600C1B61280A5392D7CAC40>110 D<EB01F0A51303A41307A2130FA2131F
A2133F137F13FF1203000F90B512C0B7FCA4C601F0C7FCB3A3ED01F0AA017FEB03E014F8
1507D93FFC13C090391FFE1F806DB512006D5B01015B9038003FF024407EBE2D>116
D<D93FE0EC7FC0B549B5FCA50003EC00076C81B3A85EA35E6C5DA26E013D7F017F02F9EB
FF8090393FFC03F16DB512E16D14C1010314019026003FFC91C7FC392E7CAC40>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fg cmss14 20.736 12
/Fg 12 118 df<EAFFFEB3B3B3B3B3B390BA12C0AB427871F759>76
D<EDFFF8023F13FF49B612C0010F15F0013F15FC90B77E00038248838484849126FC000F
7F02C013036C90C76C7F01F86E7F01E0157F496F7E90C9FC000282CA148083A37113C0AD
040FB5FC0307B6FC92B7FC140F147F0103B8FC130F133F5B48B6EAF00748ECFC00481480
4801FCC7FC4813F014C04890C8FC485A5B5B12FF5BA45FA27F5F6C6C5D6D5D6D92B5FC6E
13036C01E0130F02FC90B6FC6C90B8FCA27E17F76C16E76C16876CEDFE076C15F8013F14
C06D49C9FC010313803A5179CE4F>97 D<ED0FFC92B512C0020314F8020F14FE023F804A
8149B712E04982498249825B49D9F8077F49D9E0007F90B50080133F4AC76C1380484980
48496E13C04A8048496E13E05C48824AED7FF04890C9FCA249163F003F18F8A249161F12
7F5BA290B912FCA2BAFCA801F0CBFCA66C7EA47F123FA27F121F7FA26C7F807E6E16086C
6D16186E16786C6D16F86C6D15036E150F6D01C0EC7FFC6D01F0EB03FF6D01FE133F6D90
B7FC7F6D17F86D17E06D17C0023F16006E15FC020715F0020115C0DA003F49C7FC030313
C03E517BCE49>101 D<EAFFFEAFC7FCB3A7EA7FFCB3B3B3B3A40F7474F328>105
D<EAFFF8B3B3A894381FFFF04D13E04D13C094B5128019004C5B4C5B4C5B4C5B4C5B4C5B
4C5B93B5FC4B91C7FC4B5B4B5B5F4B5B4B5B4B5B4B5B92B5C8FC4A5B4A5B4A5B5C4A5B4A
5B5E4A5B91B5FC01F98001FB8090B6FC8282A28282157F4A6C7E02FC804A7E4A6C7F02E0
804A7E4A6C7F1400496D7F498181496E7E498182707F8482707F8482707F8482717E8483
711380A27113C019E0837113F019F8837113FC19FE3F7873F750>107
D<EAFFF8B3B3B3B3B3B3AC0D7873F728>I<922601FFC0ED07FFD8FFF0011F01FC037F13
F092B60203B512FC020303C0010F14FF4A6F4981021F6F017F814A6F90B77E4A6F488291
B76C488201F15F01F370488201F7D9C01F4AEB007F9027FFFE0003DABFF8010F7F02F801
0003E013034A023FD9FFC001007F4A6E4A804A94C8FC71834A5E91C86C496F1380A3496F
4981A2495FA5495FB3B3AD694E73CD84>I<923803FF80D8FFF0011F13F892B512FE0203
6E7E4A81021F814A814A8191B77E13F101F38201F7EB803F9027FFFE00037F02F813004A
6E13804A804A80A24A8091C814C0A25B83A25BA55BB3B3AD3A4E73CD55>I<923803FFC0
033F13FC92B6FC020315C0020F15F0023F15FC4A8149B87E4983498349834949C66C7F49
01F0010F7F4901C001037F92C8FC49486F7E48496F13804A8148496F13C048496F13E04A
8148496F13F0A24890CA13F8A249177F003F19FCA249173F007F19FEA449171F00FF19FF
AD6D5F007F19FEA46D177F003F19FCA26D17FF6C19F86E5D6C19F06E5D6E5D6C19E06C6D
4B13C06E5D6C6D4B13806E5D6C6D6C49B512006D6D495B6D01F0010F5B6D01FF90B55A6D
91B65A6D5F6D5F6D5F6D94C7FC023F15FC6E5D020715E002011580DA003F01FCC8FC0303
13C048517BCE53>I<EE7FE092380FFFFCD8FFF8017F13FF4AB612C0020781021F81027F
8191B77E01FB8290B9FC85EDC03F9126FE00078002F8130102E06D6C7F4A6E7F4A8091C8
6C7F498149814983838385187FA2727EA384A31A80A284AC601A00A360A34E5AA218FF61
5FA26D4B5B5F6D4B5B7F053F5B6E5C02E091B55A6E01035C02FC130F02FF017F91C7FC92
B65A6001FB5E01F95ED9F87F5D6E5D6E5D02074AC8FC020114F8DA003F13E0030790C9FC
92CBFCB3AD416F73CD55>I<903803FFC0B3A3B91280AAD8000301C0C8FCB3B3AD81A218
806D6D1301EF07C06F130F173F9239FE03FFE06D90B6FCA36E15F0A26E15C06E15006E14
FC6E14E06E91C7FC020013C034637DE03C>116 D<D8FFF8923807FFC0B3B3B35FA35FA2
5F5F6D92B5FC5E6C6C5C160F6D6C133FDAF001B6FC6C90B8FC17E76C16C717876CEDFE07
6C15F86C15E06C15006C6C01F890C8FC010F90CAFC3A4E73CB55>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fh cmss12 14.4 4
/Fh 4 56 df<EAFFC0AA0A0A758921>46 D<EC1FF891B5FC010314C04980011F14F84980
49809039FFF81FFF48D9C00313804A7E4890C713C04848EC7FE049143F4848EC1FF0A249
140F001F16F8491407A2003F16FCA2491403A2007F16FEA3491401A300FF16FFB3A6007F
16FE6D1403A66C6CEC07FCA46C6CEC0FF8A26C6CEC1FF0A26D143F000716E06D147F6C6C
ECFFC06C6D481380ECE0076CD9F81F13006DB55A6D5C6D5C6D5C010314C0010091C7FCEC
1FF830527BCF3B>48 D<EC7FF0903803FFFE010FEBFFC0013F804914F890B67E48814881
48D9807F1380270FFC000F13C049010313E0484813004848EC7FF049143F007F16F84914
1FEE0FFC48C8FC1607127E003E16FE121E121C000C15031204C9FCA21607A317FCA2160F
17F8A2EE1FF0A2EE3FE0167F17C0EEFF804B13004B5AA24B5A4B5A4B5A4B5A4B5A4B5A4A
48C7FC4A5A4A5A4A5A4A5A4A5A4A5A4AC8FC495A495A495A495A495A495A495A49C9FC48
5A485A485A485A485A48B712FE5AA82F507BCF3B>50 D<B9FCA9C9EA01FEEE03FCEE07F8
A2EE0FF0EE1FE0EE3FC0167F178016FF4B13005E15034B5AA24B5A5E151F4B5AA24B5AA2
4B5AA25C93C7FC5C5D14075DA2140F5DA2141F5D143FA25D147FA35D14FFA35D5BA54990
C8FCA75C1307AA304F7BCD3B>55 D E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: A4

%%EndSetup
%%Page: 1 1
1 0 bop 324 0 a @beginspecial @setspecial
 tx@Dict begin STP newpath 1.13809 SLW 0. setgray  1. true 0.0 0.0
308.23624 -94.84192 .5 Frame  gsave 1.13809 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.0 SLW 0. setgray  [ 4.74202 -47.42096
37.9369 -7.1132 37.9369 -87.7287  /Lineto /lineto load def false Polygon
 gsave 0. setgray fill grestore end
 
@endspecial 560 472 a
 tx@Dict begin 90.  RotBegin  end
 560
472 a 459 512 a
 1. setgray
 459 512 a Fh(2.)20 b(2.)663 512 y
 0 setgray
 663
512 a 560 472 a
 tx@Dict begin RotEnd  end
 560 472 a 324 0 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.0 SLW 0. setgray  [ 303.4942 -47.42096
270.29932 -7.1132 270.29932 -87.7287  /Lineto /lineto load def false
Polygon  gsave 0. setgray fill grestore end


@endspecial 3158 472 a
 tx@Dict begin -90.  RotBegin  end
 3158 472 a 3041 512 a
 1. setgray
 3041 512
a Fh(2007)3277 512 y
 0 setgray
 3277 512 a 3158 472 a
 tx@Dict begin RotEnd  end
 3158 472 a
853 374 a Fg(Lukion)54 b(matematiikk)-5 b(akilpail)o(un)1428
657 y(loppukilpailu)-47 1484 y Ff(1.)99 b Fe(Osoita,)24
b(ett\177)-50 b(a)22 b(kun)g(alkuluku)g(jaetaan)g(30:ll\177)-50
b(a,)23 b(jak)m(o)6 b(j\177)-50 b(a\177)g(ann\177)g(os)22
b(on)h(jok)m(o)f(1)g(tai)f(alkuluku.)40 b(P\177)-50 b(ateek\177)g(o)-47
1604 y(samanlainen)32 b(v\177)-50 b(aite,)32 b(kun)i(jak)-6
b(a)6 b(ja)33 b(on)g(60)g(tai)g(90?)-47 1763 y Ff(2.)99
b Fe(M\177)-50 b(a\177)g(arit\177)g(a)33 b(yh)m(t\177)-50
b(al\177)g(on)694 2044 y Fd(x)751 2003 y Fc(8)817 2044
y Fb(\000)23 b Fd(x)974 2003 y Fc(7)1041 2044 y Fe(+)f(2)p
Fd(x)1247 2003 y Fc(6)1314 2044 y Fb(\000)h Fe(2)p Fd(x)1521
2003 y Fc(5)1587 2044 y Fe(+)g(3)p Fd(x)1794 2003 y Fc(4)1860
2044 y Fb(\000)g Fe(3)p Fd(x)2067 2003 y Fc(3)2134 2044
y Fe(+)f(4)p Fd(x)2340 2003 y Fc(2)2407 2044 y Fb(\000)h
Fe(4)p Fd(x)e Fe(+)2747 1976 y(5)p 2747 2021 50 4 v 2747
2112 a(2)2836 2044 y(=)29 b(0)-47 2311 y(reaalisten)k(juurten)i
(lukum\177)-50 b(a\177)g(ar\177)g(a.)-47 2470 y Ff(3.)99
b Fe(T)-8 b(asossa)38 b(on)g(viisi)e(pistett\177)-50
b(a,)38 b(joista)f(mitk\177)-50 b(a\177)g(an)36 b(k)m(olme)g(eiv\177)
-50 b(at)37 b(ole)g(samalla)e(suoralla.)57 b(Osoita,)-47
2590 y(ett\177)-50 b(a)33 b(jotkin)f(nelj\177)-50 b(a)34
b(n\177)-50 b(aist\177)g(a)33 b(o)m(v)-6 b(at)33 b(kup)s(eran)h
(nelikulmion)d(k\177)-50 b(arki\177)g(a.)-47 2749 y Ff(4.)99
b Fe(Sala)m(v)-6 b(aaran)22 b(k)-6 b(aupunkiin)23 b(rak)m(ennetaan)g
(kuuden)g(viraston)f(v\177)-50 b(alille)20 b(pik)m(oteknologiaa)g
(k\177)-50 b(aytt\177)g(av\177)g(a)-47 2869 y(tietoliik)m(ennev)m(erkk)
m(o)33 b(niin,)h(ett\177)-50 b(a)35 b(aina)f(k)-6 b(ahden)35
b(viraston)f(v\177)-50 b(alill\177)g(a)33 b(on)h(suora)h(k)-6
b(aap)s(eliyh)m(teys.)47 b(V)-8 b(er-)-47 2988 y(k)m(on)43
b(rak)m(en)m(taminen)g(kilpailutetaan)f(k)m(olmen)h(op)s(eraattorin)f
(v\177)-50 b(alill\177)g(a)41 b(siten,)46 b(ett\177)-50
b(a)43 b(kukin)g(yh)m(teys)-47 3108 y(kilpailutetaan)35
b(erikseen.)55 b(Kun)37 b(v)m(erkk)m(o)f(on)h(rak)m(ennettu,)h(h)m
(uomataan,)e(ett\177)-50 b(a)36 b(eri)h(op)s(eraattorien)-47
3227 y(j\177)-50 b(arjestelm\177)g(at)29 b(eiv\177)-50
b(at)28 b(olek)-6 b(aan)29 b(k)m(esk)m(en\177)-50 b(a\177)g(an)30
b(yh)m(teensopivia.)43 b(Kaupunki)30 b(joutuu)g(h)m(ylk\177)-50
b(a\177)g(am\177)g(a\177)g(an)28 b(siksi)-47 3347 y(k)-6
b(ahden)30 b(op)s(eraattorin)e(rak)m(en)m(tamat)f(yh)m(teydet,)j
(miss\177)-50 b(a)28 b(n\177)-50 b(am\177)g(a)28 b(h)m(yl\177)-50
b(att\177)g(av\177)g(at)27 b(op)s(eraattorit)g(v)-6 b(alitaan)-47
3466 y(niin,)43 b(ett\177)-50 b(a)40 b(v)-6 b(ahink)m(o)41
b(on)h(mahdollisimman)c(pieni.)68 b(Kuink)-6 b(a)42 b(moni)e(virasto)g
(v\177)-50 b(ahin)m(t\177)g(a\177)g(an)41 b(v)m(oi)f(olla)-47
3586 y(k)m(esk)m(en\177)-50 b(a\177)g(an)31 b(yh)m(teydess\177)-50
b(a,)32 b(mahdollisesti)e(monen)g(yh)m(teyden)i(k)-6
b(autta,)30 b(kun)h(tilanne)g(oli)f(alun)h(p)s(erin)-47
3705 y(pahin)i(mahdollinen?)-47 3865 y Ff(5.)99 b Fe(Osoita,)24
b(ett\177)-50 b(a)22 b(on)g(olemassa)g(sellainen)g(k)m(ok)m(onaisk)m
(ertoiminen)f(p)s(olynomi)f Fd(P)14 b Fe(\()p Fd(x)p
Fe(\),)23 b(ett\177)-50 b(a)22 b(yh)m(t\177)-50 b(al\177)g(oll\177)g(a)
-47 3984 y Fd(P)14 b Fe(\()p Fd(x)p Fe(\))27 b(=)h(0)j(ei)h(ole)f(k)m
(ok)m(onaislukuratk)-6 b(aisuja,)31 b(m)m(utta)f(jok)-6
b(aisella)31 b(p)s(ositiivisella)f(k)m(ok)m(onaisluvulla)f
Fd(n)-47 4104 y Fe(on)k(olemassa)f Fd(x)c Fb(2)g Fa(Z)p
Fe(,)i(jolle)j Fd(n)28 b Fb(j)f Fd(P)14 b Fe(\()p Fd(x)p
Fe(\).)p -47 4513 3780 4 v -47 4702 a(Laskuaik)-6 b(aa)32
b(on)i Ff(3)k(tun)m(tia.)-47 4821 y Fe(T)-8 b(ee)33 b(kukin)g(teh)m
(t\177)-50 b(av\177)g(a)33 b(omalle)e(k)m(onseptiarkin)i(sivulleen.)-47
4941 y(Merkitse)g(k)m(o)s(epap)s(eriin)g(selv\177)-50
b(asti)33 b(tekstaten)g(oma)f(nimesi.)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
